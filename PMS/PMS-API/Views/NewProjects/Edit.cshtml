@model PMS_API.Models.NewProject

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*
    <link id="bootstrap-style" href="@Url.Content("~/Content/css/bootstrap.min.css")" rel="stylesheet">
    <link href="@Url.Content("~/Content/css/bootstrap-responsive.min.css")" rel="stylesheet">
    <link id="base-style" href="@Url.Content("~/Content/css/style.css")" rel="stylesheet">
    <link id="base-style-responsive" href="@Url.Content("~/Content/css/style-responsive.css")" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,300,600,700,800&subset=latin,cyrillic-ext,latin-ext' rel='stylesheet' type='text/css'>
    <div id="sidebar-left" class="span2">
        <div class="nav-collapse sidebar-nav">
            <ul class="nav nav-tabs nav-stacked main-menu">
                <li><a href="@Url.Content("~/NewProjects/Create")"><i class="icon-edit"></i><span class="hidden-tablet"> New Enquiry</span></a></li>
                <li><a href="@Url.Content("~/NewProjects/Index")"><i class="icon-tasks"></i><span class="hidden-tablet"> All Enquiry</span></a></li>
            </ul>
        </div>
    </div>
    <noscript>
        <div class="alert alert-block span10">
            <h4 class="alert-heading">Warning!</h4>
            <p>You need to have <a href="http://en.wikipedia.org/wiki/JavaScript" target="_blank">JavaScript</a> enabled to use this site.</p>
        </div>
    </noscript>

    <div id="content" class="span10">
        <ul class="breadcrumb">
            <li>
                <i class="icon-home"></i>
                <a href="index.html">Home</a>
                <i class="icon-angle-right"></i>
            </li>
            <li>
                <i class="icon-edit"></i>
                <a href="#">Edit</a>
            </li>
        </ul>


        <div class="row-fluid sortable">
            <div class="box span12">
                <div class="box-header" data-original-title="">
                    <h2><i class="halflings-icon edit"></i><span class="break"></span>Edit</h2>
                </div>
                <div class="box-content">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Id)

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CommencedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.CommencedOn, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CommencedOn, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ConcludedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ConcludedOn, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ConcludedOn, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ArchitectId, "ArchitectId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("ArchitectId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ArchitectId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BusinessPartnerId, "BusinessPartnerId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("BusinessPartnerId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BusinessPartnerId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PlanUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PlanUrl, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PlanUrl, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SectionsUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.SectionsUrl, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SectionsUrl, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ElevationsUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ElevationsUrl, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ElevationsUrl, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TDImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.TDImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TDImageUrl, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.AreaPanelCalculationUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.AreaPanelCalculationUrl, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AreaPanelCalculationUrl, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ConceptsDrawingUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ConceptsDrawingUrl, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ConceptsDrawingUrl, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.OptimizationUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.OptimizationUrl, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.OptimizationUrl, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ShopDrawingUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ShopDrawingUrl, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ShopDrawingUrl, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.AnalysisUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.AnalysisUrl, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AnalysisUrl, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BOQUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.BOQUrl, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BOQUrl, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.InteriorUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.InteriorUrl, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.InteriorUrl, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.OwnerId, "OwnerId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("OwnerId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.OwnerId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProjectTypeId, "ProjectTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("ProjectTypeId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ProjectTypeId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FixingTypeId, "FixingTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("FixingTypeId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.FixingTypeId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ApplicationsId, "ApplicationsId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("ApplicationsId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ApplicationsId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TDRenderImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.TDRenderImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TDRenderImageUrl, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Save" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>/span
        </div>
    </div>



    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }


    <div id="content" class="span10">
        <ul class="breadcrumb">
            <li>
                <i class="icon-home"></i>
                <a href="index.html">Home</a>
                <i class="icon-angle-right"></i>
            </li>
            <li>
                <i class="icon-edit"></i>
                <a href="#">New Project</a>
            </li>
        </ul>

        <!--/row-->
        <div class="row-fluid sortable">
            <div class="box span12">
                <div class="box-header" data-original-title="">
                    <h2><i class="halflings-icon edit"></i><span class="break"></span>New Project</h2>
                    @*<div class="box-icon">
                            <a href="#" class="btn-setting"><i class="halflings-icon wrench"></i></a>
                            <a href="#" class="btn-minimize"><i class="halflings-icon chevron-up"></i></a>
                            <a href="#" class="btn-close"><i class="halflings-icon remove"></i></a>
                        </div>*@

@*@using (Html.BeginForm())
    {     @Html.AntiForgeryToken()*@
<div class="box-content">


    <form class="form-horizontal" action="/NewProjects/Create" enctype="multipart/form-data" method="post">
        <fieldset>
            <div class="control-group">
                <label class="control-label" for="selectError">Project Name</label>
                <div class="controls">
                    @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="focusedInput">City</label>
                <div class="controls">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="focusedInput">Street</label>
                <div class="controls">
                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="control-group">
                <label class="control-label" for="focusedInput">CommencedOn(MM/DD/YY)</label>
                <div class="controls">
                    @Html.EditorFor(model => model.CommencedOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CommencedOn, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="control-group">
                <label class="control-label" for="focusedInput">ConcludedOn(MM/DD/YY)</label>
                <div class="controls">
                    @Html.EditorFor(Model => Model.ConcludedOn)
                    @*<input type="text" class="input-xlarge datepicker" id="ConcludedOn" value="02/16/12" />*@
                </div>
            </div>

            <div class="control-group">
                <label class="control-label" name="architects" for="selectError3">Architects</label>
                <div class="controls">
                    @Html.DropDownList("ArchitectId", null, htmlAttributes: new { @class = "form-control" })
                    @*<select id="architects" name="architects">
                            @{
                                foreach (@PMS_API.Models.Architect architect in ViewBag.ArchitectId)
                                {
                                    <option value="@architect.Id">@architect.FullName</option>
                                }
                            }
                        </select>*@
                </div>
            </div>

            <div class="control-group">
                <label class="control-label" for="focusedInput">BusinessPartners</label>
                <div class="controls">
                    @*<select id="businesspartners" name="businesspartners"></select>*@
                    @Html.DropDownList("BusinessPartnerId", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="control-group">
                <label class="control-label" name="Priority" for="selectError3">Owners</label>

                <div class="controls">
                    @*<select id="owners" name="owners"></select>*@
                    @Html.DropDownList("OwnerId", null, htmlAttributes: new { @class = "form-control" })
                </div>

            </div>


            <div class="control-group">
                <label class="control-label" name="Origin of the Project" for="selectError3">Projects</label>
                <div class="controls">
                    @*<select id="Projects" name="Projects"></select>*@
                    @Html.DropDownList("ProjectTypeId", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" name="Already associated with FunderMax">FixingTypes</label>
                <div class="controls">
                    @*<select id="FixingTypes" name="FixingTypes"></select>*@
                    @Html.DropDownList("FixingTypeId", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="focusedInput">Applications</label>
                <div class="controls">
                    @*<select id="Applications" name="Applications"></select>*@
                    @Html.DropDownList("ApplicationsId", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="focusedInput">Plan</label>
                <div class="controls">
                    <input type="file" name="PlanUrl" id="PlanUrl" />
                    @*<div class="uploader" id="plan"><input class="input-file uniform_on" id="file1" type="file"><span class="filename" style="-webkit-user-select: none;">No file selected</span><span class="action" style="-webkit-user-select: none;">Choose File</span></div>*@
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="focusedInput">Sections</label>
                <div class="controls">
                    <div class="uploader" id="sections"><input class="input-file uniform_on" id="file1" name="SectionsUrl" type="file"><span class="filename" style="-webkit-user-select: none;">No file selected</span><span class="action" style="-webkit-user-select: none;">Choose File</span></div>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="focusedInput">Elevations</label>
                <div class="controls">
                    <div class="uploader" id="elevations"><input class="input-file uniform_on" name="ElevationsUrl" id="file1" type="file"><span class="filename" style="-webkit-user-select: none;">No file selected</span><span class="action" style="-webkit-user-select: none;">Choose File</span></div>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="focusedInput">3D Images</label>
                <div class="controls">
                    <div class="uploader" id="3dimages"><input class="input-file uniform_on" name="TDImageUrl" id="file1" type="file"><span class="filename" style="-webkit-user-select: none;">No file selected</span><span class="action" style="-webkit-user-select: none;">Choose File</span></div>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="focusedInput">Area Panel Calculations</label>
                <div class="controls">
                    <div class="uploader" id="areapanel"><input class="input-file uniform_on" name="AreaPanelCalculationUrl" id="file1" type="file"><span class="filename" style="-webkit-user-select: none;">No file selected</span><span class="action" style="-webkit-user-select: none;">Choose File</span></div>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="focusedInput">Concepts Drawings</label>
                <div class="controls">
                    <div class="uploader" id="conceptsDrawings"><input class="input-file uniform_on" name="ConceptsDrawingUrl" id="file1" type="file"><span class="filename" style="-webkit-user-select: none;">No file selected</span><span class="action" style="-webkit-user-select: none;">Choose File</span></div>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="focusedInput">Optimizations</label>
                <div class="controls">
                    <div class="uploader" id="optimization"><input class="input-file uniform_on" name="OptimizationUrl" id="file1" type="file"><span class="filename" style="-webkit-user-select: none;">No file selected</span><span class="action" style="-webkit-user-select: none;">Choose File</span></div>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="focusedInput">Analysis</label>
                <div class="controls">
                    <div class="uploader" id="analysis"><input class="input-file uniform_on" id="file1" name="AnalysisUrl" type="file"><span class="filename" style="-webkit-user-select: none;">No file selected</span><span class="action" style="-webkit-user-select: none;">Choose File</span></div>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="focusedInput">BOQ</label>
                <div class="controls">
                    <div class="uploader" id="BOQ"><input class="input-file uniform_on" name="BOQUrl" id="file1" type="file"><span class="filename" style="-webkit-user-select: none;">No file selected</span><span class="action" style="-webkit-user-select: none;">Choose File</span></div>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="focusedInput">Interior</label>
                <div class="controls">
                    <div class="uploader" id="interior"><input class="input-file uniform_on" name="InteriorUrl" id="file1" type="file"><span class="filename" style="-webkit-user-select: none;">No file selected</span><span class="action" style="-webkit-user-select: none;">Choose File</span></div>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="focusedInput">ShopDrawing</label>
                <div class="controls">
                    <div class="uploader" id="interior"><input class="input-file uniform_on" name="ShopDrawingUrl" id="file1" type="file"><span class="filename" style="-webkit-user-select: none;">No file selected</span><span class="action" style="-webkit-user-select: none;">Choose File</span></div>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="focusedInput">3D RenderImage</label>
                <div class="controls">
                    <div class="uploader" id="interior"><input class="input-file uniform_on" name="TDRenderImageUrl" id="file1" type="file"><span class="filename" style="-webkit-user-select: none;">No file selected</span><span class="action" style="-webkit-user-select: none;">Choose File</span></div>
                </div>
            </div>
            <div class="form-actions">
                <button type="submit" class="btn btn-primary">Save changes</button>
                <button class="btn">Cancel</button>
            </div>
        </fieldset>
    </form>
</div>
        </div><!--/span-->
    </div><!--/row-->
</div>